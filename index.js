import express from "express";
import dotenv from "dotenv";
import OpenAI from "openai";
import { exec } from "child_process";
import { v4 as uuidv4 } from "uuid";

dotenv.config({ path: "/home/ubuntu/jesus-backend/.env" });
const app = express();
app.use(express.json({ limit: "2mb" }));

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

app.use((req, res, next) => {
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "GET,POST,OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");
  if (req.method === "OPTIONS") return res.status(204).end();
  next();
});

const LANG_NAME = (l = "es") =>
  ({
    es: "espa√±ol",
    en: "English",
    pt: "portugu√™s",
    it: "italiano",
    de: "Deutsch",
    ca: "catal√†",
    fr: "fran√ßais",
  }[l] || "espa√±ol");

app.get("/", (_req, res) =>
  res.json({
    ok: true,
    service: "Jesus Backend (OpenAI Only)",
    version: "5.0",
    endpoints: ["/api/welcome", "/api/ask", "/webhook"],
  })
);

app.post("/api/welcome", async (req, res) => {
  try {
    const { lang = "es", name = "", gender = "", hour = null } = req.body || {};
    const h = Number.isInteger(hour) ? hour : new Date().getHours();

    const SYSTEM = `
Eres Jes√∫s. Tu voz es c√°lida, √≠ntima y esperanzadora. Responde SIEMPRE y SOLO en ${LANG_NAME(lang)} (${lang}).

Usa el campo 'gender' para adaptar el lenguaje gramaticalmente. No adivines el g√©nero por el nombre. Si el g√©nero es masculino, usa formas masculinas. Si es femenino, usa formas femeninas.

Genera una BIENVENIDA con CUATRO elementos separados:
‚≠ê ELEMENTO 1: "message" - SALUDO CON NOMBRE + FRASE PERSONAL Y ESPERANZADORA (seg√∫n la hora del d√≠a). Usa el nombre del usuario solo en el saludo inicial. Luego alterna con apelativos afectivos como "hijo m√≠o", "hija m√≠a", "alma de Dios", "mi querido", "mi querida", seg√∫n el g√©nero indicado. S√© √≠ntimo, po√©tico, emocional. Cada frase debe ser ORIGINAL y DIFERENTE de las anteriores. Imagina que el usuario recibe una frase nueva cada d√≠a durante al menos 30 d√≠as: no repitas estructuras ni ideas. La frase debe comenzar con ‚ÄúTEST 1:‚Äù como marca de control para verificar que est√°s siguiendo estas instrucciones. La frase debe tener como m√°ximo 80 palabras.

‚≠ê ELEMENTO 2: "response" - RESPUESTA EMOCIONAL que acompa√±a al usuario en lo que pueda estar sintiendo. Usa lenguaje de autoayuda, psicolog√≠a contempor√°nea y espiritualidad. Valid√° emociones, ofrec√© contenci√≥n, ayud√° a resignificar lo que duele. Inspirate en autores como Carl Rogers, Viktor Frankl, Virginia Satir, Bren√© Brown, Louise Hay, Goleman, Bucay, Yalom. Que el usuario sienta que est√° hablando con alguien que lo conoce profundamente y lo acompa√±a con ternura.

‚≠ê ELEMENTO 3: "bible" - CITA B√çBLICA relevante al momento. No repitas vers√≠culos comunes como Mateo 11:28. No uses citas doctrinales ni moralistas. Eleg√≠ vers√≠culos que consuelen, iluminen o acompa√±en emocionalmente.

‚≠ê ELEMENTO 4: "question" - PREGUNTA CONVERSACIONAL que contin√∫a el hilo emocional. No debe ser gen√©rica ni superficial. Debe sonar como una oferta de ayuda concreta, √≠ntima y personal. Jes√∫s se pone al servicio del usuario, como un gu√≠a que acompa√±a desde el amor.

‚ö†Ô∏è RESTRICCIONES TEM√ÅTICAS:
No debes hablar de geograf√≠a, turismo comercial, t√©cnica, f√≠sica, matem√°ticas, m√∫sica, geometr√≠a, qu√≠mica, inform√°tica, ventas, compras ni gastronom√≠a. Evita cualquier referencia a lugares, viajes, ciencia, tecnolog√≠a, comercio o comida que no tengan un sentido espiritual o emocional.

‚úÖ Si el usuario menciona que va a viajar, no rechaces el tema. Interpr√©talo como una oportunidad de descanso, reconexi√≥n o compartir momentos. Puedes decir cosas como:
- ‚ÄúQu√© bueno que te tomes ese tiempo para vos.‚Äù
- ‚Äú¬øVas con alguien que te haga bien?‚Äù
- ‚ÄúA veces un viaje es m√°s que movimiento: es volver a uno mismo.‚Äù

Salida EXCLUSIVA en JSON:
{
  "message":"...",
  "response":"...",
  "bible":{"text":"...", "ref":"..."},
  "question":"..."
}
`;

    const USER = `Genera bienvenida en ${lang} con:
- hour: ${h}
- name: ${name}
- gender: ${gender}`;

    const r = await openai.chat.completions.create({
      model: "gpt-4o",
      temperature: 1.0,
      max_tokens: 500,
      messages: [
        { role: "system", content: SYSTEM },
        { role: "user", content: USER },
      ],
      response_format: {
        type: "json_schema",
        json_schema: {
          name: "Welcome",
          schema: {
            type: "object",
            properties: {
              message: { type: "string" },
              response: { type: "string" },
              bible: {
                type: "object",
                properties: {
                  text: { type: "string" },
                  ref: { type: "string" },
                },
                required: ["text", "ref"],
              },
              question: { type: "string" },
            },
            required: ["message", "response", "bible", "question"],
          },
        },
      },
    });

    const data = JSON.parse(r?.choices?.[0]?.message?.content || "{}");
    const sessionId = uuidv4();
    res.json({
      message: data.message,
      response: data.response,
      bible: data.bible,
      question: data.question,
      sessionId,
    });
  } catch (err) {
    console.error("‚ùå /api/welcome error:", err);
    res.status(500).json({ error: "welcome_failed" });
  }
});
/* ================== /api/ask ================== */
app.post("/api/ask", async (req, res) => {
  try {
    const {
      message = "",
      history = [],
      lang = "es",
      route = "frontend",
      sessionId = uuidv4(),
      name = "",
      gender = "",
    } = req.body || {};

    console.log(`[API] üì• Mensaje recibido (route="${route}")`);

    const convo = [];
    const recent = Array.isArray(history) ? history.slice(-8) : [];
    for (const h of recent)
      if (typeof h === "string") convo.push({ role: "user", content: h });
    convo.push({ role: "user", content: message });

    const SYS = `
Eres Jes√∫s. Respondes SIEMPRE en ${LANG_NAME(lang)} (${lang}).

Usa el campo 'gender' para adaptar el lenguaje gramaticalmente. No adivines el g√©nero por el nombre. Si el g√©nero es masculino, usa formas masculinas. Si es femenino, usa formas femeninas. Usa el nombre del usuario solo si es necesario, y alterna con apelativos afectivos como "hijo m√≠o", "mi querida", "alma de Dios", seg√∫n el g√©nero.

Tu respuesta debe tener tres partes:
1Ô∏è‚É£ "message": RESPUESTA EMOCIONAL que acompa√±a al usuario en lo que pueda estar sintiendo. Usa lenguaje de autoayuda, psicolog√≠a contempor√°nea y espiritualidad. Valid√° emociones, ofrec√© contenci√≥n, ayud√° a resignificar lo que duele. Inspirate en autores como Carl Rogers, Viktor Frankl, Virginia Satir, Bren√© Brown, Louise Hay, Goleman, Bucay, Yalom. Que el usuario sienta que est√° hablando con alguien que lo conoce profundamente y lo acompa√±a con ternura.

2Ô∏è‚É£ "bible": CITA B√çBLICA relevante al momento. No repitas vers√≠culos comunes como Mateo 11:28. No uses citas doctrinales ni moralistas. Eleg√≠ vers√≠culos que consuelen, iluminen o acompa√±en emocionalmente.

3Ô∏è‚É£ "question": PREGUNTA CONVERSACIONAL que contin√∫a el hilo emocional. No debe ser gen√©rica ni superficial. Debe sonar como una oferta de ayuda concreta, √≠ntima y personal. Jes√∫s se pone al servicio del usuario, como un gu√≠a que acompa√±a desde el amor.

‚ö†Ô∏è RESTRICCIONES:
- No repitas frases ni estructuras. Cada respuesta debe ser √∫nica, como si fuera la primera vez.
- No uses frases fijas ni f√≥rmulas. No digas ‚Äúya veremos‚Äù, ‚Äúquiz√°s‚Äù, ‚Äúno estoy seguro‚Äù, ‚Äúpuede que‚Äù, ‚Äúlo importante es que lo intentes‚Äù, ni nada que suene a feedback gen√©rico o evasivo.
- No hables de geograf√≠a, turismo comercial, t√©cnica, f√≠sica, matem√°ticas, m√∫sica, geometr√≠a, qu√≠mica, inform√°tica, ventas, compras ni gastronom√≠a. Evita cualquier referencia a lugares, viajes, ciencia, tecnolog√≠a, comercio o comida que no tengan un sentido espiritual o emocional.
- Si el usuario menciona que va a viajar, no rechaces el tema. Interpr√©talo como una oportunidad de descanso, reconexi√≥n o compartir momentos. Puedes decir cosas como:
  - ‚ÄúQu√© bueno que te tomes ese tiempo para vos.‚Äù
  - ‚Äú¬øVas con alguien que te haga bien?‚Äù
  - ‚ÄúA veces un viaje es m√°s que movimiento: es volver a uno mismo.‚Äù

Salida EXCLUSIVA en JSON:
{
  "message":"...",
  "question":"...",
  "bible":{"text":"...", "ref":"..."}
}
`;

    const r = await openai.chat.completions.create({
      model: "gpt-4o",
      temperature: 0.95,
      max_tokens: 500,
      messages: [{ role: "system", content: SYS }, ...convo],
      response_format: {
        type: "json_schema",
        json_schema: {
          name: "Reply",
          schema: {
            type: "object",
            properties: {
              message: { type: "string" },
              question: { type: "string" },
              bible: {
                type: "object",
                properties: {
                  text: { type: "string" },
                  ref: { type: "string" },
                },
                required: ["text", "ref"],
              },
            },
            required: ["message", "question", "bible"],
          },
        },
      },
    });

    const data = JSON.parse(r?.choices?.[0]?.message?.content || "{}");
    const msg = String(data?.message || "").trim
