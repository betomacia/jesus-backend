<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <title>Push Admin</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px;max-width:800px;margin:0 auto;background:#111;color:#eee}
    h1{font-size:20px;margin:0 0 12px}
    fieldset{border:1px solid #333;border-radius:10px;margin:0 0 12px;padding:12px}
    label{display:block;font-size:13px;margin:6px 0}
    input[type="text"], textarea, select{width:100%;box-sizing:border-box;padding:8px;border-radius:8px;border:1px solid #333;background:#000;color:#eee}
    textarea{min-height:90px;resize:vertical}
    .row{display:grid;grid-template-columns:1fr 1fr;gap:10px}
    .row3{display:grid;grid-template-columns:1fr 1fr 1fr;gap:10px}
    button{background:#6d28d9;color:#fff;border:0;padding:10px 14px;border-radius:10px;cursor:pointer}
    button:disabled{opacity:.5;cursor:default}
    .muted{color:#aaa;font-size:12px}
    pre{white-space:pre-wrap;background:#0a0a0a;border:1px solid #222;padding:10px;border-radius:10px}
    .inline{display:inline-flex;gap:8px;align-items:center}
  </style>
</head>
<body>
  <h1>Push Admin</h1>

  <fieldset>
    <legend>Servidor</legend>
    <div class="row">
      <label>Backend URL
        <input id="base" type="text" value="https://jesus-backend-production-1098.up.railway.app" />
      </label>
      <label>X-Admin-Key
        <input id="adm" type="text" placeholder="abc123" />
      </label>
    </div>
    <div class="muted">Asegurate de pegar la clave correcta (la misma que probaste con /users/push/diag-admin-key).</div>
  </fieldset>

  <fieldset>
    <legend>Mensaje</legend>
    <label>Título
      <input id="title" type="text" placeholder="Título del mensaje" />
    </label>
    <label>Texto
      <textarea id="body" placeholder="Texto del mensaje"></textarea>
    </label>
    <div class="row">
      <label>URL (al hacer click)
        <input id="url" type="text" placeholder="/ o https://…" value="/" />
      </label>
      <label>Idioma (opcional, override)
        <input id="lang" type="text" placeholder="es, en, pt…" />
      </label>
    </div>
  </fieldset>

  <fieldset>
    <legend>Segmentación</legend>
    <div class="row3">
      <label>Plataforma
        <select id="platform">
          <option value="all">Todas</option>
          <option value="web">Web</option>
          <option value="android">Android</option>
          <option value="ios">iOS</option>
        </select>
      </label>
      <label>Última actividad (días)
        <input id="last" type="text" value="30" />
      </label>
      <label>Límite de dispositivos
        <input id="limit" type="text" value="500" />
      </label>
    </div>

    <div class="row">
      <label class="inline">
        <input id="group" type="checkbox" checked />
        Agrupar por usuario (1 device por usuario)
      </label>
      <label>Preferir prefijo (si agrupa)
        <input id="prefer" type="text" value="ANDROID_CHROME" />
      </label>
    </div>

    <div class="row">
      <label>Emails específicos (opcional; coma-separado)
        <input id="emails" type="text" placeholder="user@dominio.com, otro@dominio.com" />
      </label>
      <label class="inline">
        <input id="onlyWebMode" type="checkbox" />
        Forzar webDataOnly (solo útil si plataforma=web)
      </label>
    </div>
  </fieldset>

  <div class="row" style="align-items:center">
    <button id="send">Enviar</button>
    <div class="muted">Si plataforma=Web ⇒ se envían como <b>data-only</b>; Android/iOS ⇒ con <b>notification</b>.</div>
  </div>

  <h3>Respuesta</h3>
  <pre id="out">{ }</pre>

<script>
(function(){
  const $ = (id) => document.getElementById(id);
  const base = $("base");
  const adm  = $("adm");
  const title= $("title");
  const body = $("body");
  const url  = $("url");
  const lang = $("lang");
  const platform = $("platform");
  const last = $("last");
  const limit= $("limit");
  const group= $("group");
  const prefer=$("prefer");
  const emails=$("emails");
  const onlyWebMode=$("onlyWebMode");
  const out  = $("out");
  const btn  = $("send");

  function log(o){ out.textContent = JSON.stringify(o, null, 2); }

  async function adminBroadcast(payload){
    const r = await fetch(`${base.value.replace(/\/+$/,'')}/users/push/admin-broadcast`,{
      method:"POST",
      headers:{
        "Content-Type":"application/json",
        "X-Admin-Key": adm.value.trim()
      },
      body: JSON.stringify(payload)
    });
    const j = await r.json().catch(()=>({ok:false,error:"bad_json"}));
    return j;
  }

  async function adminSendToEmails(payload){
    const r = await fetch(`${base.value.replace(/\/+$/,'')}/users/push/admin-send`,{
      method:"POST",
      headers:{
        "Content-Type":"application/json",
        "X-Admin-Key": adm.value.trim()
      },
      body: JSON.stringify(payload)
    });
    const j = await r.json().catch(()=>({ok:false,error:"bad_json"}));
    return j;
  }

  btn.onclick = async () => {
    btn.disabled = true; log({ sending:true });

    const msg = {
      title: title.value || "",
      body:  body.value  || "",
      data:  { url: (url.value || "/") }
    };

    // ← plataforma seleccionada
    const p = platform.value; // "all"|"web"|"android"|"ios"

    // webDataOnly: SOLO para web
    const webDataOnly = (p === "web") ? true : false;
    // si tildaste el toggle, lo fuerza (útil para pruebas)
    const webDataOnlyFinal = (p === "web") ? (onlyWebMode.checked ? true : webDataOnly) : false;

    // override idioma (opcional)
    const langOverride = lang.value.trim() ? lang.value.trim() : null;

    try{
      let resp;
      const emailsList = emails.value.split(",").map(x=>x.trim().toLowerCase()).filter(Boolean);

      if (emailsList.length){
        // Envío dirigido a emails (admin-send), respeta plataforma si se elige (y device_id/fcm_token si quisieras agregar)
        resp = await adminSendToEmails({
          emails: emailsList,
          platform: (p === "all" ? null : p),
          title: msg.title,
          body:  msg.body,
          data:  msg.data,
          webDataOnly: webDataOnlyFinal,
        });
      } else {
        // Broadcast segmentado (admin-broadcast)
        resp = await adminBroadcast({
          platform: (p === "all" ? null : p),
          lastSeenDays: Number.isFinite(+last.value) ? +last.value : 30,
          groupByUser: !!group.checked,
          preferPrefix: prefer.value || "ANDROID_CHROME",
          limit: Number.isFinite(+limit.value) ? +limit.value : 500,
          title: msg.title,
          body:  msg.body,
          data:  msg.data,
          webDataOnly: webDataOnlyFinal
        });
      }

      log(resp);
    }catch(e){
      log({ ok:false, error: e && e.message || String(e) });
    }finally{
      btn.disabled = false;
    }
  };
})();
</script>
</body>
</html>
